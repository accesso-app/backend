openapi: 3.0.1
info:
  title: Accesso App Admin API.
  version: 0.1.0
  description: API for Management
externalDocs:
  url: https://accesso-app.github.io/backend/api-internal/index.html
servers:
  - url: http://localhost:9005/
  - url: https://accesso.sova.dev/api/admin
paths:
  "/applications/user.add":
    post:
      operationId: applicationsUserAdd
      tags: [ Applications ]
      description: Add user to application
      requestBody:
        $ref: "#/components/requestBodies/ApplicationsUserAdd"
      responses:
        200:
          $ref: "#/components/responses/ApplicationsUserAddSuccess"
        400:
          $ref: "#/components/responses/ApplicationsUserAddFailure"
        500:
          description: Something went wrong

  "/applications/secret.regenerate":
    post:
      operationId: applicationsSecretRegenerate
      tags: [ Applications ]
      description: create new secret key
      requestBody:
        $ref: "#/components/requestBodies/ApplicationsSecretRegenerate"
      responses:
        200:
          $ref: "#/components/responses/ApplicationsSecretRegenerateSuccess"
        400:
          $ref: "#/components/responses/ApplicationsSecretRegenerateFailure"
        500:
          description: Something went wrong

  "/applications/user.remove":
    post:
      operationId: applicationsUserRemove
      tags: [ Applications ]
      description: Remove user from application
      requestBody:
        $ref: "#/components/requestBodies/ApplicationsUserRemove"
      responses:
        200:
          $ref: "#/components/responses/ApplicationsUserRemoveSuccess"
        400:
          $ref: "#/components/responses/ApplicationsUserRemoveFailure"
        500:
          description: Something went wrong

  "/applications.create":
    post:
      operationId: applicationsCreate
      tags: [ Applications ]
      description: Create new applications
      requestBody:
        $ref: "#/components/requestBodies/ApplicationsCreate"
      responses:
        200:
          $ref: "#/components/responses/ApplicationsCreateSuccess"
        400:
          $ref: "#/components/responses/ApplicationsCreateFailure"
        500:
          description: Something went wrong

  "/invites.generate":
    post:
      operationId: invitesGenerate
      tags: [ Invites ]
      description: Generate invites to register to application
      requestBody:
        $ref: "#/components/requestBodies/InvitesGenerate"
      responses:
        200:
          $ref: "#/components/responses/InvitesGenerateSuccess"
        400:
          $ref: "#/components/responses/InvitesGenerateFailure"
        500:
          description: Something went wrong

  "/invites.list":
    post:
      operationId: invitesList
      tags: [ Invites ]
      description: Get invites for an application
      requestBody:
        $ref: "#/components/requestBodies/InvitesList"
      responses:
        200:
          $ref: "#/components/responses/InvitesListSuccess"
        400:
          $ref: "#/components/responses/InvitesListFailure"
        500:
          description: Something went wrong

  "/invites.delete":
    post:
      operationId: invitesDelete
      tags: [ Invites ]
      description: Delete invites from an application
      requestBody:
        $ref: "#/components/requestBodies/InvitesDelete"
      responses:
        200:
          $ref: "#/components/responses/InvitesDeleteSuccess"
        400:
          $ref: "#/components/responses/InvitesDeleteFailure"
        500:
          description: Something went wrong

  "/session/create":
    post:
      operationId: sessionCreate
      tags: [ Session ]
      # TODO: Add rate limit and CSRF protection
      description: Login and create new session token
      requestBody:
        $ref: "#/components/requestBodies/SessionCreate"
      responses:
        201:
          $ref: "#/components/responses/SessionCreateSucceeded"
        400:
          $ref: "#/components/responses/SessionCreateFailed"
        500:
          description: Something went wrong

  "/session/get":
    post:
      operationId: sessionGet
      tags: [ Session ]
      # TODO: Add rate limit and CSRF protection
      description: Read session token and show current session.
        Authenticated checked by session-token cookie
      responses:
        200:
          $ref: "#/components/responses/SessionGetSuccess"
        401:
          description: User not authorized
        500:
          description: Something went wrong

  "/session/delete":
    post:
      operationId: sessionDelete
      tags: [ Session ]
      # TODO: Add rate limit and CSRF protection
      description: Delete current or all sessions
      requestBody:
        $ref: "#/components/requestBodies/SessionDelete"
      responses:
        200:
          description: session deleted
        400:
          $ref: "#/components/responses/SessionDeleteFailure"
        401:
          description: User not authorized
        500:
          description: Something went wrong

components:
  responses:
    ApplicationsUserAddSuccess:
      description: User was added successful.
      content:
        application/json:
          schema:
            type: object

    ApplicationsUserAddFailure:
      description:
        Happens when something went wrong after attemp to connect user with application
      content:
        application/json:
          schema:
            required:
              - code
            properties:
              code:
                description: |
                  Possible errors: <br/>
                  `access_denied` — This error occures when user's session was expired | user doesn't have enough permission | or user unauthorized.<br/>
                  `invalid_request` — Something was wrong with user request.<br/>
                  `application_not_found` — Occure when application_id was not found.<br/>
                  `user_not_found` — Occure when user_id was not found.<br/>
                type: string
                enum:
                  - access_denied
                  - invalid_request
                  - application_not_found
                  - user_not_found

    ApplicationsSecretRegenerateSuccess:
      description: New app secret was generated.
      content:
        application/json:
          schema:
            required:
              - secretKey
            properties:
              secretKey:
                description: New secret key
                type: string
                example: 41190cee52314dcc8167_ebf798b55ce3

    ApplicationsSecretRegenerateFailure:
      description:
        Happens when something went wrong after attemp to regenerate application key
      content:
        application/json:
          schema:
            required:
              - code
            properties:
              code:
                description: |
                  Possible errors: <br/>
                  `access_denied` -- This error occures when user's session was expired | user doesn't have enough permission | or user unauthorized.<br/>
                  `invalid_request` -- Something was wrong with user request.<br/>
                type: string
                enum:
                  - access_denied
                  - invalid_request

    ApplicationsUserRemoveSuccess:
      description: User was deleted successful.
      content:
        application/json:
          schema:
            type: object

    ApplicationsUserRemoveFailure:
      description:
        Happens when something went wrong after attemp to delete application
      content:
        application/json:
          schema:
            required:
              - code
            properties:
              code:
                description: |
                  Possible errors: <br/>
                  `access_denied` — This error occures when user's session was expired | user doesn't have enough permission | or user unauthorized.<br/>
                  `invalid_request` — Something was wrong with user request.<br/>
                  `application_not_found` — Occure when application_id was not found.<br/>
                  `user_not_found` — Occure when user_id was not found.<br/>
                type: string
                enum:
                  - access_denied
                  - invalid_request
                  - application_not_found
                  - user_not_found

    ApplicationsCreateSuccess:
      description: New app was created and attached to user.
      content:
        application/json:
          schema:
            required:
              - applicationId
            properties:
              applicationId:
                type: string
                format: uuid
                example: 41190cee-5231-4dcc-8167-ebf798b55ce3

    ApplicationsCreateFailure:
      description: Happens when something went wrong after attemp to register new application.
      content:
        application/json:
          schema:
            required:
              - error
            properties:
              error:
                type: string
                enum:
                  - "invalid_payload"
                  - "redirect_uri_claimed"

    SessionCreateSucceeded:
      description: Session created, token wrote to cookies
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SessionUser"

    SessionCreateFailed:
      description: Login failed
      content:
        application/json:
          schema:
            required:
              - error
            properties:
              error:
                type: string
                enum:
                  - "invalid_credentials"
                  - "invalid_form"
                  - "invalid_payload"

    SessionGetSuccess:
      description: Session exists
      content:
        application/json:
          schema:
            required:
              - user
            properties:
              user:
                $ref: "#/components/schemas/SessionUser"

    SessionDeleteFailure:
      description: failed to delete session
      content:
        application/json:
          schema:
            required:
              - code
            properties:
              code:
                description: |
                  Possible errors: <br/>
                  `access_denied` — This error occures when user's session was expired | user doesn't have enough permission | or user unauthorized.<br>
                  `invalid_request` — Something was wrong with user request.<br/>
                type: string
                enum:
                  - access_denied
                  - invalid_request

    InvitesGenerateSuccess:
      description: Invites generated successfully
      content:
        application/json:
          schema:
            type: object
            required: [invites]
            properties:
              invites:
                type: array
                items:
                  type: string
                  example: facility-repent-pastry-viper-bermuda

    InvitesGenerateFailure:
      description: Failed to generate invites for the application
      content:
        application/json:
          schema:
            type: object
            required: [code]
            properties:
              code:
                type: string
                enum:
                  - application_not_found
                  - invites_disabled_for_application
                  - user_not_authorized
                  - invalid_request

    InvitesListSuccess:
      description: Invites listed successfully for the application
      content:
        application/json:
          schema:
            type: object
            required: [invites]
            properties:
              invites:
                type: array
                items:
                  type: object
                  required: [invite, createdAt]
                  properties:
                    invite:
                      type: string
                      example: facility-repent-pastry-viper-bermuda
                    createdAt:
                      type: string
                      format: date-time
                    registered:
                      type: object
                      required: [user, registeredAt]
                      properties:
                        user:
                          $ref: "#/components/schemas/ApplicationUser"
                        registeredAt:
                          type: string
                          format: date-time
                          description: When an invite was used for registration in the application

    InvitesListFailure:
      description: Failed to list invites for the application
      content:
        application/json:
          schema:
            type: object
            required: [ code ]
            properties:
              code:
                type: string
                enum:
                  - application_not_found
                  - user_not_authorized
                  - invalid_request

    InvitesDeleteSuccess:
      description: Invites deleted successfully from the application

    InvitesDeleteFailure:
      description: Failed to delete invites from the application
      content:
        application/json:
          schema:
            type: object
            required: [ code ]
            properties:
              code:
                type: string
                enum:
                  - application_not_found
                  - user_not_authorized
                  - invalid_request

  requestBodies:
    ApplicationsCreate:
      required: true
      content:
        application/json:
          schema:
            required:
              - title
              - allowRegistrations
            properties:
              title:
                type: string
              redirectUri:
                type: string
                format: uri
                example: https://example-app.com/oauth/callback
              allowRegistrations:
                type: boolean

    ApplicationsUserAdd:
      required: true
      content:
        application/json:
          schema:
            required:
              - applicationId
              - userId
            properties:
              applicationId:
                description: The identifier of application.
                type: string
                format: uuid
                example: 41190cee-5231-4dcc-8167-ebf798b55ce3
              userId:
                type: string
                format: uuid
                example: 41190cee-5231-4dcc-8167-ebf798b55ce3

    ApplicationsSecretRegenerate:
      required: true
      content:
        application/json:
          schema:
            required:
              - applicationId
            properties:
              applicationId:
                description: ID if the application need to regenerate the secret key.
                type: string
                format: uuid
                example: 41190cee-5231-4dcc-8167-ebf798b55ce3

    ApplicationsUserRemove:
      required: true
      content:
        application/json:
          schema:
            required:
              - applicationId
              - userId
            properties:
              applicationId:
                description: The identifier of your app.
                type: string
                format: uuid
                example: 41190cee-5231-4dcc-8167-ebf798b55ce3
              userId:
                type: string
                format: uuid
                example: 41190cee-5231-4dcc-8167-ebf798b55ce3

    SessionCreate:
      required: true
      content:
        application/json:
          schema:
            required:
              - user
            properties:
              user:
                $ref: "#/components/schemas/SessionUser"

    SessionDelete:
      required: true
      description: Delete user session
      content:
        application/json:
          schema:
            required:
              - deleteAllSessions
            properties:
              deleteAllSessions:
                type: boolean

    InvitesGenerate:
      required: true
      description: Generate invites to register in application
      content:
        application/json:
          schema:
            type: object
            required: [applicationId, invitesCount]
            properties:
              applicationId:
                type: string
                format: uuid
                description: What application should be invite generated for
              invitesCount:
                type: number
                example: 50
                maximum: 1000
                minimum: 1

    InvitesList:
      required: true
      description: Get invites for an application
      content:
        application/json:
          schema:
            type: object
            required: [applicationId]
            properties:
              applicationId:
                type: string
                format: uuid
                description: What application should invites listed for?
              filter:
                type: string
                enum:
                  - only_used
                  - only_unused
                  - all
                default: all
              sort:
                type: string
                enum:
                  - registration_asc
                  - registration_desc
                  - generation_asc
                  - generation_desc
                default: generation_desc

    InvitesDelete:
      required: true
      description: Delete invites from an application
      content:
        application/json:
          schema:
            type: object
            required: [ applicationId, invites ]
            properties:
              applicationId:
                type: string
                format: uuid
                description: What application should invites deleted from?
              invites:
                type: array
                description: What invites should be deleted
                minLength: 1
                items:
                  type: string
                  example: facility-repent-pastry-viper-bermuda

  schemas:
    SessionUser:
      description: Current user in a session
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
        lastName:
          type: string

    ApplicationUser:
      description: Fields used to describe user of an application
      type: object
      required: [ id, firstName, lastName, registeredAt ]
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        registeredAt:
          type: string
          format: date-time
          description: When the user was registered in Accesso